// #####################################################
// # OpenGL Vertex Shader "RustProcess" (GLSL v. 1.20) #
// #####################################################
//
// Copyright (c) 2010 - Lukas Hermanns
//

#version 120

//! Global member: World matrix (Object space).
uniform mat4 WorldMatrix;

//! Global member: Light direction vector for simple vertex lighting.
uniform vec3 LightDirection;


/*
 * Vertex shader
 */

void main(void)
{
	//! Use standard transformation.
	gl_Position = ftransform();
	
	//! Transform normal vector.
	vec3 Normal = normalize(mat3(WorldMatrix) * gl_Normal);
	
	//! Compute simple directional lighting.
	float LightIntensity = max(0.2, -dot(Normal, LightDirection));
	
	gl_FrontColor.rgb	= gl_Color.rgb * LightIntensity;
	gl_FrontColor.a		= gl_Color.a;
	
	//! Pass only the first texture coordinate.
	gl_TexCoord[0] = gl_TextureMatrix[0] * gl_MultiTexCoord0;
}

