"/*\n"
" * D3D11 default drawing shader file\n"
" * \n"
" * This file is part of the \"SoftPixel Engine\" (Copyright (c) 2008 by Lukas Hermanns)\n"
" * See \"SoftPixelEngine.hpp\" for license information.\n"
" */\n"
"\n"
"Texture2D Texture : register(t0);\n"
"SamplerState Sampler : register(s0);\n"
"\n"
"cbuffer BufferBasic : register(b0)\n"
"{\n"
"    float4x4 ProjectionMatrix;\n"
"    float4 ImageRect;\n"
"};\n"
"\n"
"struct VertexInput\n"
"{\n"
"    float4 Position : POSITION;\n"
"    float4 Color    : COLOR;\n"
"    float2 TexCoord : TEXCOORD0;\n"
"    uint Index      : SV_VertexID;\n"
"};\n"
"\n"
"struct VertexPixelExchange\n"
"{\n"
"    float4 Position : SV_Position;\n"
"    float4 Color    : COLOR;\n"
"    float2 TexCoord : TEXCOORD0;\n"
"};\n"
"\n"
"VertexPixelExchange VertexMain(VertexInput Input)\n"
"{\n"
"    VertexPixelExchange Output = (VertexPixelExchange)0;\n"
"    \n"
"    switch (Input.Index)\n"
"    {\n"
"        case 0: Output.Position = float4(ImageRect.x, ImageRect.y, 0.0, 1.0); break;\n"
"        case 1: Output.Position = float4(ImageRect.z, ImageRect.y, 0.0, 1.0); break;\n"
"        case 2: Output.Position = float4(ImageRect.z, ImageRect.w, 0.0, 1.0); break;\n"
"        case 3: Output.Position = float4(ImageRect.x, ImageRect.y, 0.0, 1.0); break;\n"
"        case 4: Output.Position = float4(ImageRect.z, ImageRect.w, 0.0, 1.0); break;\n"
"        case 5: Output.Position = float4(ImageRect.x, ImageRect.w, 0.0, 1.0); break;\n"
"    }\n"
"    \n"
"    Output.Position = mul(ProjectionMatrix, Output.Position);\n"
"    Output.Color    = Input.Color;\n"
"    Output.TexCoord = Input.TexCoord;\n"
"    \n"
"    return Output;\n"
"}\n"
"\n"
"float4 PixelMain(VertexPixelExchange Input) : SV_Target\n"
"{\n"
"    return Texture.Sample(Sampler, Input.TexCoord) * Input.Color;\n"
"}\n"
"\n"
