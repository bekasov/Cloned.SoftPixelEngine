/*
 * Bloom filter GLSL fragment shader file
 * 
 * This file is part of the "SoftPixel Engine" (Copyright (c) 2008 by Lukas Hermanns)
 * See "SoftPixelEngine.hpp" for license information.
 */

#define NUM_SAMPLES 9

/* === Uniforms === */

uniform sampler2D Tex;

uniform vec2 BlurOffsets[NUM_SAMPLES];
uniform float BlurWeights[NUM_SAMPLES];

uniform int VertRenderPass;

/* === Functions === */

void main()
{
    vec4 Color = vec4(0.0, 0.0, 0.0, 1.0);
	
	if (VertRenderPass != 0)
	{
		// Vertical render pass
		for (int i = 0; i < NUM_SAMPLES; ++i)
			Color.rgb += texture2D(Tex, gl_TexCoord[0].xy + vec2(0.0, BlurOffsets[i].y)).rgb * vec3(BlurWeights[i]);
	}
	else
	{
		// Horizontal render pass
		for (int i = 0; i < NUM_SAMPLES; ++i)
			Color.rgb += texture2D(Tex, gl_TexCoord[0].xy + vec2(BlurOffsets[i].x, 0.0)).rgb * vec3(BlurWeights[i]);
	}
	
    gl_FragColor = Color;
}
