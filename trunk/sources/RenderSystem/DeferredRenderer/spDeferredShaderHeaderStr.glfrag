"/*\n"
" * Deferred GLSL fragment shader header file\n"
" * \n"
" * This file is part of the \"SoftPixel Engine\" (Copyright (c) 2008 by Lukas Hermanns)\n"
" * See \"SoftPixelEngine.hpp\" for license information.\n"
" */\n"
"\n"
"//#version 140\n"
"\n"
"/*\n"
"\n"
"Compilation options:\n"
"\n"
"MAX_LIGHTS                -> Maximal count of light sources.\n"
"MAX_EX_LIGHTS            -> Maximal count of extended light sources (e.g. spot lights).\n"
"\n"
"SHADOW_MAPPING          -> Enables shadow mapping.\n"
"GLOBAL_ILLUMINATION        -> Enables global illumination (requires SHADOW_MAPPING).\n"
"BLOOM_FILTER            -> Enables bloom filter.\n"
"DEBUG_GBUFFER           -> Renders g-buffer for debugging.\n"
"DEBUG_GBUFFER_WORLDPOS    -> Renders position-map instead of depth map.\n"
"HAS_LIGHT_MAP            -> Specifies that a lightmap is used.\n"
"ALLOW_OVERBLENDING        -> Allows the lighting to ober-blend.\n"
"\n"
"*/\n"
"\n"
"#extension GL_ARB_explicit_attrib_location : enable\n"
"\n"
"#ifdef SHADOW_MAPPING\n"
"#    extension GL_EXT_texture_array : enable\n"
"#    extension GL_ARB_texture_cube_map_array : enable\n"
"#    ifdef GLOBAL_ILLUMINATION\n"
"#        extension GL_EXT_gpu_shader4 : enable\n"
"#    endif\n"
"#endif\n"
"\n"
"/* === Uniforms === */\n"
"\n"
"uniform sampler2D DiffuseAndSpecularMap;\n"
"uniform sampler2D NormalAndDepthMap;\n"
"\n"
"#ifdef HAS_LIGHT_MAP\n"
"uniform sampler2D IlluminationMap;\n"
"#endif\n"
"\n"
"#ifdef SHADOW_MAPPING\n"
"\n"
"// Depth maps (for standard shadow maps)\n"
"uniform sampler2DArray DirLightShadowMaps;\n"
"uniform samplerCubeArray PointLightShadowMaps;\n"
"\n"
"#    ifdef GLOBAL_ILLUMINATION\n"
"// Diffuse maps (for reflective shadow maps)\n"
"uniform sampler2DArray DirLightDiffuseMaps;\n"
"uniform samplerCubeArray PointLightDiffuseMaps;\n"
"\n"
"// Normal maps (for reflective shadow maps)\n"
"uniform sampler2DArray DirLightNormalMaps;\n"
"uniform samplerCubeArray PointLightNormalMaps;\n"
"#    endif\n"
"\n"
"#endif\n"
"\n"
"#ifdef GLOBAL_ILLUMINATION\n"
"\n"
"uniform float GIReflectivity;\n"
"\n"
"layout(std140) uniform VPLOffsetBlock\n"
"{\n"
"    float4 VPLOffsets[100];\n"
"};\n"
"\n"
"#endif\n"
"\n"
"uniform int LightCount;\n"
"uniform int LightExCount;\n"
"\n"
"//#define CONSTANT_BUFFERS\n"
"\n"
"#ifdef CONSTANT_BUFFERS\n"
"\n"
"layout(std140) uniform LightBlock\n"
"{\n"
"    SLight Lights[MAX_LIGHTS];\n"
"    SLightEx LightsEx[MAX_EX_LIGHTS];\n"
"};\n"
"\n"
"#else\n"
"\n"
"uniform SLight Lights[MAX_LIGHTS];\n"
"uniform SLightEx LightsEx[MAX_EX_LIGHTS];\n"
"\n"
"#endif\n"
"\n"
"uniform float3 ViewPosition;        //!< Global camera position.\n"
"uniform float3 AmbientColor;        //!< Ambient light color.\n"
"\n"
"uniform float2 JitteredOffsets[NUM_JITTERD_OFFSETS];\n"
"\n"
"/* === Varyings === */\n"
"\n"
"in float2 TexCoord;\n"
"in float4 ViewRay;\n"
"\n"
"//layout(origin_upper_left) in float4 gl_FragCoord;\n"
"\n"
"layout(location = 0) out float4 OutputColor;\n"
"\n"
"#ifdef BLOOM_FILTER\n"
"layout(location = 1) out float4 OutputSpecular;\n"
"#endif\n"
