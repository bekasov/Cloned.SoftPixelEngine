"/*\n"
" * Deferred GLSL vertex shader file\n"
" * \n"
" * This file is part of the \"SoftPixel Engine\" (Copyright (c) 2008 by Lukas Hermanns)\n"
" * See \"SoftPixelEngine.hpp\" for license information.\n"
" */\n"
"\n"
"#version 130\n"
"\n"
"/* === Uniforms === */\n"
"\n"
"uniform float4x4 ProjectionMatrix;    //!< 2D drawing projection matrix\n"
"uniform float4x4 InvViewProjection;    //!< Inverse view-projection matrix.\n"
"\n"
"/* === Varyings === */\n"
"\n"
"out float2 TexCoord;\n"
"out float4 ViewRay;\n"
"\n"
"/* === Functions === */\n"
"\n"
"void Frustum(inout float4 v)\n"
"{\n"
"    v.x = (v.x - 0.5) * 2.0;\n"
"    v.y = (v.y - 0.5) * 2.0;\n"
"}\n"
"\n"
"void main()\n"
"{\n"
"    /* Process vertex transformation for position and normal */\n"
"    gl_Position    = ProjectionMatrix * gl_Vertex;\n"
"    TexCoord    = gl_MultiTexCoord0.xy;\n"
"    \n"
"    /* Pre-compute view ray */\n"
"    ViewRay = float4(TexCoord.x, 1.0 - TexCoord.y, 1.0, 1.0);\n"
"    \n"
"    Frustum(ViewRay);\n"
"    \n"
"    ViewRay = InvViewProjection * ViewRay;\n"
"}\n"
