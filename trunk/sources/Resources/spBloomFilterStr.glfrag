"/*\n"
" * Bloom filter GLSL fragment shader file\n"
" * \n"
" * This file is part of the \"SoftPixel Engine\" (Copyright (c) 2008 by Lukas Hermanns)\n"
" * See \"SoftPixelEngine.hpp\" for license information.\n"
" */\n"
"\n"
"#define SAMPLE_COUNT 9\n"
"\n"
"/* === Uniforms === */\n"
"\n"
"uniform sampler2D Tex;\n"
"\n"
"uniform vec2 BlurOffsets[SAMPLE_COUNT];\n"
"uniform float BlurWeights[SAMPLE_COUNT];\n"
"\n"
"/* === Functions === */\n"
"\n"
"void main()\n"
"{\n"
"    vec4 Color = vec4(0.0, 0.0, 0.0, 1.0);\n"
"    \n"
"    for (int i = 0; i < SAMPLE_COUNT; ++i)\n"
"    {\n"
"        #ifndef HORZ_RENDER_PASS\n"
"        // Vertical render pass\n"
"        Color.rgb += texture2D(Tex, gl_TexCoord[0].xy + vec2(BlurOffsets[i].x, 0.0)).rgb * vec3(BlurWeights[i]);\n"
"        #else\n"
"        // Horizontal render pass\n"
"        Color.rgb += texture2D(Tex, gl_TexCoord[0].xy + vec2(0.0, BlurOffsets[i].y)).rgb * vec3(BlurWeights[i]);\n"
"        #endif\n"
"    }\n"
"    \n"
"    gl_FragColor = Color;\n"
"}\n"
