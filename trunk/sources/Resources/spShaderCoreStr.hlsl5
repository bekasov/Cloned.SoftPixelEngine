"/*\n"
" * HLSL (SM 5) shader core file\n"
" * \n"
" * This file is part of the \"SoftPixel Engine\" (Copyright (c) 2008 by Lukas Hermanns)\n"
" * See \"SoftPixelEngine.hpp\" for license information.\n"
" */\n"
"\n"
"#define PI                        3.14159265359\n"
"#define E                        2.71828182846\n"
"\n"
"#define MUL(m, v)                mul(m, v)\n"
"#define MUL_TRANSPOSED(v, m)    mul(v, m)\n"
"#define MUL_NORMAL(n)            (n).xyz = mul((n).xyz, float3x3(Tangent, Binormal, Normal))\n"
"#define CAST(t, v)                ((t)(v))\n"
"#define SAMPLER2D(n, i)            Texture2D n : register(t##i); SamplerState Sampler##n : register(s##i)\n"
"#define SAMPLER2DARRAY(n, i)    Texture2DArray n : register(t##i); SamplerState Sampler##n : register(s##i)\n"
"#define SAMPLERCUBEARRAY(n, i)    TextureCubeArray n : register(t##i); SamplerState Sampler##n : register(s##i)\n"
"\n"
"#define mod(a, b)                fmod(a, b)\n"
"\n"
"#define floatBitsToInt(v)        asint(v)\n"
"#define floatBitsToUInt(v)        asuint(v)\n"
"#define intBitsToFloat(v)        asfloat(v)\n"
"#define uintBitsToFloat(v)        asfloat(v)\n"
"\n"
"#define tex2D(s, t)                s.Sample(Sampler##s, t)\n"
"#define tex2DArray(s, t)        s.SampleLevel(Sampler##s, t.xyz)\n"
"#define tex2DArrayLod(s, t)        s.SampleLevel(Sampler##s, t.xyz, t.w)\n"
"#define tex2DGrad(s, t, x, y)    s.SampleGrad(Sampler##s, t, x, y)\n"
"\n"
"#define RWTexture3DUInt            RWTexture3D<uint>\n"
"\n"
"inline void InterlockedImageCompareExchange(RWTexture3DUInt Image, int3 Coord, uint Compare, uint Value, out uint Result)\n"
"{\n"
"    InterlockedCompareExchange(Image[Coord], Compare, Value, Result);\n"
"}\n"
